"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.translateModule = exports.translateReport = void 0;
const lodash_clonedeep_1 = __importDefault(require("lodash.clonedeep"));
const en_json_1 = __importDefault(require("./locales/en.json"));
const fi_json_1 = __importDefault(require("./locales/fi.json"));
const sv_json_1 = __importDefault(require("./locales/sv.json"));
const nb_json_1 = __importDefault(require("./locales/nb.json"));
const nn_json_1 = __importDefault(require("./locales/nn.json"));
const locales = {
    en: en_json_1.default,
    fi: fi_json_1.default,
    sv: sv_json_1.default,
    nb: nb_json_1.default,
    nn: nn_json_1.default
};
function translateName(type, code, locale) {
    var _a, _b, _c, _d, _e, _f;
    if ((_b = (_a = locale[type]) === null || _a === void 0 ? void 0 : _a[code]) === null || _b === void 0 ? void 0 : _b.name) {
        return (_d = (_c = locale[type]) === null || _c === void 0 ? void 0 : _c[code]) === null || _d === void 0 ? void 0 : _d.name;
    }
    return (_f = (_e = en_json_1.default[type]) === null || _e === void 0 ? void 0 : _e[code]) === null || _f === void 0 ? void 0 : _f.name;
}
function translateDescription(type, code, locale) {
    var _a, _b, _c, _d, _e, _f;
    if ((_b = (_a = locale[type]) === null || _a === void 0 ? void 0 : _a[code]) === null || _b === void 0 ? void 0 : _b.name) {
        return (_d = (_c = locale[type]) === null || _c === void 0 ? void 0 : _c[code]) === null || _d === void 0 ? void 0 : _d.description;
    }
    return (_f = (_e = en_json_1.default[type]) === null || _e === void 0 ? void 0 : _e[code]) === null || _f === void 0 ? void 0 : _f.description;
}
function translateTest(test, type, code, locale) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    if ((_c = (_b = (_a = locale[type]) === null || _a === void 0 ? void 0 : _a[code]) === null || _b === void 0 ? void 0 : _b.results) === null || _c === void 0 ? void 0 : _c[test.resultCode]) {
        test.description = (_f = (_e = (_d = locale[type]) === null || _d === void 0 ? void 0 : _d[code]) === null || _e === void 0 ? void 0 : _e.results) === null || _f === void 0 ? void 0 : _f[test.resultCode];
    }
    else {
        test.description = (_j = (_h = (_g = en_json_1.default[type]) === null || _g === void 0 ? void 0 : _g[code]) === null || _h === void 0 ? void 0 : _h.results) === null || _j === void 0 ? void 0 : _j[test.resultCode];
    }
}
function translateAssertion(type, assertion, locale) {
    var _a, _b;
    assertion.name = translateName(type, assertion.code, locale);
    assertion.description = translateDescription(type, assertion.code, locale);
    for (const test of (_a = assertion.results) !== null && _a !== void 0 ? _a : []) {
        translateTest(test, type, assertion.code, locale);
    }
    for (const test of (_b = assertion.results) !== null && _b !== void 0 ? _b : []) {
        if (test.verdict === assertion.metadata.outcome) {
            assertion.metadata.description = test.description;
            break;
        }
    }
}
function getLocale(locale) {
    let localeToUse = locales.en;
    if (typeof locale === 'string') {
        if (Object.keys(locales).includes(locale)) {
            localeToUse = locales[locale];
        }
    }
    else {
        localeToUse = locale;
    }
    return localeToUse;
}
function translateModule(module, locale) {
    var _a;
    if (module) {
        const localToUse = getLocale(locale);
        for (const code in (_a = module.assertions) !== null && _a !== void 0 ? _a : {}) {
            const assertion = module.assertions[code];
            if (assertion) {
                translateAssertion(module.type, assertion, localToUse);
            }
        }
    }
}
exports.translateModule = translateModule;
function translateReport(report, locale) {
    const localeToUse = getLocale(locale);
    const reportToTranslate = (0, lodash_clonedeep_1.default)(report);
    translateModule(reportToTranslate.modules['act-rules'], localeToUse);
    translateModule(reportToTranslate.modules['wcag-techniques'], localeToUse);
    translateModule(reportToTranslate.modules['best-practices'], localeToUse);
    return reportToTranslate;
}
exports.translateReport = translateReport;
exports.default = locales;
