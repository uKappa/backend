"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const metadata_object_1 = __importDefault(require("./metadata.object"));
class EvaluationRecord {
    constructor(evaluator) {
        this.type = 'evaluation';
        this.evaluator = evaluator;
        this.metadata = new metadata_object_1.default();
        this.modules = {};
    }
    addModuleEvaluation(module, evaluation) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        if (evaluation) {
            switch (module) {
                case 'act-rules':
                    this.modules['act-rules'] = evaluation;
                    break;
                case 'wcag-techniques':
                    this.modules['wcag-techniques'] = evaluation;
                    break;
                case 'best-practices':
                    this.modules['best-practices'] = evaluation;
                    break;
                case 'wappalyzer':
                    this.modules['wappalyzer'] = evaluation;
                    break;
                case 'counter':
                    this.modules['counter'] = evaluation;
                    break;
                default:
                    throw new Error('Invalid module report.');
            }
            if (module !== 'wappalyzer' && module !== 'counter') {
                this.metadata.addPassedResults((_b = (_a = this.modules[module]) === null || _a === void 0 ? void 0 : _a.metadata.passed) !== null && _b !== void 0 ? _b : 0);
                this.metadata.addWarningResults((_d = (_c = this.modules[module]) === null || _c === void 0 ? void 0 : _c.metadata.warning) !== null && _d !== void 0 ? _d : 0);
                this.metadata.addFailedResults((_f = (_e = this.modules[module]) === null || _e === void 0 ? void 0 : _e.metadata.failed) !== null && _f !== void 0 ? _f : 0);
                this.metadata.addInapplicableResults((_h = (_g = this.modules[module]) === null || _g === void 0 ? void 0 : _g.metadata.inapplicable) !== null && _h !== void 0 ? _h : 0);
            }
        }
    }
    getFinalReport() {
        return {
            type: this.type,
            system: this.evaluator,
            metadata: this.metadata.getResults(),
            modules: this.modules
        };
    }
}
module.exports = EvaluationRecord;
//# sourceMappingURL=evaluationRecord.object.js.map