/// <reference types="@qualweb/types" />
/// <reference types="@qualweb/types" />
import { LaunchOptions, BrowserLaunchArgumentOptions, BrowserConnectOptions, Viewport } from 'puppeteer';
import { QualwebOptions, Evaluations, PuppeteerPlugins, ClusterOptions, LoadEvent, QualwebPlugin } from '@qualweb/core';
import { generateEARLReport } from '@qualweb/earl-reporter';
import { CrawlOptions } from '@qualweb/crawler';
import 'colors';
declare class QualWeb {
    private cluster?;
    private qualwebPlugins;
    constructor(plugins?: PuppeteerPlugins);
    start(clusterOptions?: ClusterOptions, puppeteerOptions?: LaunchOptions & BrowserLaunchArgumentOptions & BrowserConnectOptions): Promise<void>;
    use(plugin: QualwebPlugin): this;
    stop(): Promise<void>;
    evaluate(options: QualwebOptions): Promise<Evaluations>;
    crawl(domain: string, options?: CrawlOptions, viewport?: Viewport, waitUntil?: LoadEvent | Array<LoadEvent>): Promise<Array<string>>;
    private checkUrls;
    private handleLocales;
    private verifyTranslationObject;
}
declare function getFileUrls(file: string): Promise<Array<string>>;
export { QualWeb, generateEARLReport, getFileUrls };
//# sourceMappingURL=index.d.ts.map